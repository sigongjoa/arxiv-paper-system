"""다중 플랫폼 선택기 수정 테스트"""
import React from 'react';\n\nconst TestPlatformSelector = () => {\n    // 하드코딩된 플랫폼 데이터 확인\n    const platforms = {\n        arxiv: { available: true, status: 'active' },\n        biorxiv: { available: true, status: 'active' },\n        pmc: { available: true, status: 'active' },\n        plos: { available: true, status: 'active' },\n        doaj: { available: true, status: 'active' },\n        core: { available: false, status: 'needs_api_key' }\n    };\n\n    const getPlatformInfo = (platform) => {\n        const platformDetails = {\n            arxiv: {\n                fullName: 'arXiv.org',\n                description: '물리학, 수학, 컴퓨터과학 프리프린트 서버',\n                features: ['무료', '빠른 업데이트', '고품질']\n            },\n            biorxiv: {\n                fullName: 'bioRxiv / medRxiv',\n                description: '생명과학 및 의학 연구 프리프린트',\n                features: ['무료', '제한없음', '생명과학']\n            },\n            pmc: {\n                fullName: 'PubMed Central',\n                description: 'NIH 공공 의학 논문 데이터베이스',\n                features: ['의학', '전문텍스트', '고신뢰성']\n            },\n            plos: {\n                fullName: 'PLOS (Public Library of Science)',\n                description: '공공 과학 도서관 - 오픈 액세스 논문',\n                features: ['오픈액세스', '다양한 분야', '고품질']\n            },\n            doaj: {\n                fullName: 'Directory of Open Access Journals',\n                description: '오픈 액세스 저널 디렉토리',\n                features: ['오픈액세스', '저널중심', '다국어']\n            },\n            core: {\n                fullName: 'CORE (COnnecting REpositories)',\n                description: '세계 최대 학술 논문 집합체 (2억개+)',\n                features: ['대용량', 'API키필수', '전세계']\n            }\n        };\n        return platformDetails[platform];\n    };\n\n    console.log('=== 플랫폼 데이터 테스트 ===');\n    Object.keys(platforms).forEach(platform => {\n        const info = getPlatformInfo(platform);\n        console.log(`${platform}: ${info.fullName} - ${info.description}`);\n        console.log(`  상태: ${platforms[platform].available ? '사용가능' : '설정필요'}`);\n        console.log(`  특징: ${info.features.join(', ')}`);\n    });\n\n    return (\n        <div style={{ padding: '20px', fontFamily: 'monospace' }}>\n            <h2>🔧 플랫폼 데이터 테스트 결과</h2>\n            \n            <h3>📊 플랫폼 목록:</h3>\n            <table border=\"1\" style={{ borderCollapse: 'collapse', width: '100%' }}>\n                <thead>\n                    <tr style={{ backgroundColor: '#f0f0f0' }}>\n                        <th>플랫폼</th>\n                        <th>전체명</th>\n                        <th>설명</th>\n                        <th>상태</th>\n                        <th>특징</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(platforms).map(platform => {\n                        const info = getPlatformInfo(platform);\n                        const isAvailable = platforms[platform].available;\n                        return (\n                            <tr key={platform} style={{ backgroundColor: isAvailable ? '#e8f5e8' : '#ffe8e8' }}>\n                                <td><strong>{platform.toUpperCase()}</strong></td>\n                                <td>{info.fullName}</td>\n                                <td>{info.description}</td>\n                                <td>{isAvailable ? '✅ 사용가능' : '⚙️ 설정필요'}</td>\n                                <td>{info.features.join(', ')}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n\n            <h3>✅ 수정 사항:</h3>\n            <ul>\n                <li>✅ 하드코딩된 플랫폼 목록 사용</li>\n                <li>✅ API 응답에 의존하지 않음</li>\n                <li>✅ 명확한 플랫폼 정보 표시</li>\n                <li>✅ 상태별 구분 (사용가능/설정필요)</li>\n                <li>✅ 백그라운드에서 선택적 API 확인</li>\n            </ul>\n\n            <h3>🎯 다음 단계:</h3>\n            <p>브라우저에서 확인: <code>http://localhost:3000</code></p>\n            <p>Multi-Platform 버튼 클릭하여 테이블 형태로 플랫폼 선택</p>\n        </div>\n    );\n};\n\nexport default TestPlatformSelector;